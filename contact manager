class Contact_manager
CONTACT_DATA_FILE = 'contacts.txt'

def get_contact
  puts "Name:"
  name = gets.chomp.strip
  puts "Email:"
  email = gets.chomp.strip
  puts "Phone:"
  phone = gets.chomp.strip
  puts "Address:"
  address = gets.chomp.strip
  [name, email, phone, address]
end

#1. A user should be able to add a new contact *1 marks*
def add_contact
  name, email, phone, address = get_contact

  File.open(CONTACT_DATA_FILE, 'a+') do |f|
    f.write "#{name}|#{email}|#{phone}|#{address}\n"
  end
end

def edit_contact
  contacts = list_contacts
  puts "Enter the serial number of the contact you want to edit:"
  id = gets.chomp.strip.to_i
  #puts contacts[id-1]
  #get the new data
   #name, email, phone, address = get_contact
   puts "record is"
   name,email, phone, address=contacts[id-1].split("|")
   puts "1.name-->#{name}\n 2.email-->#{email}\n 3.pno-->#{phone}\n 4.address-->#{address}\n"
   puts "which field you want to edit"
      val=gets.chomp.to_i
      puts "enter new data"
      new=gets.chomp
               if val==1
               name=new
                elsif val==2
                email=new
                 elsif val==3
                 phone=new
                  elsif val==4
                  address=new
                   else
                   puts "you enterd out of range"
                    end
   #overwrite that line with new data
  contacts[id-1] = "#{name}|#{email}|#{phone}|#{address}\n"
  save_contacts(contacts)
end

def delete_contact
  contacts = list_contacts
  puts "Enter the serial number of the contact you want to delete:"
  id = gets.chomp.strip.to_i
  contacts.delete_at(id - 1)
  save_contacts(contacts)
end

def save_contacts(contacts)
  File.open(CONTACT_DATA_FILE, 'w') do |f|
    contacts.each do |contact|
      f.write "#{contact}"
    end
  end
end

def read_contacts
  file_array=[]
   #File.read(CONTACT_DATA_FILE).lines
  open(CONTACT_DATA_FILE,"r").each{|line| file_array << line}
  file_array
end

def print_contact(line, serial_num)
  name, email, phone, address = line.split('|')
  puts "#{serial_num}."
  puts "Name: #{name}"
  puts "Email: #{email}"
  puts "Phone: #{phone}"
  puts "Address: #{address}"
  puts '----------'
end

def print_bar
  puts "==========="
end

def list_contacts
  puts "Contacts\n==========="
  contacts = read_contacts
  contacts.each_with_index do |contact, i|
    print_contact(contact, i + 1)
  end
  print_bar 
  return contacts
end

def search_contact
  puts "Enter name to search (Type atleast 3 characters):"
  search_term = gets.chomp.strip
  if search_term.length<3
  puts "you must enter 3 characters\n"
  else
  contacts = read_contacts
  search_results = []
  contacts.each do |contact|
  fields=contact.split("|")
  search_results << contact if fields[0].downcase.include?(search_term.downcase)
=begin
    if contact.downcase.include?(search_term.downcase)
      search_results << contact
    end
=end
  end

  print_bar
  puts "Found #{search_results.length} results"
  search_results.each_with_index do |result, index|
    print_contact(result, index + 1)
  end
  end
end
end
cm=Contact_manager.new
while true
  puts "1. Add Contact\n2. List all contacts\n3. Delete contact\n4. Search\n5. Edit \n0. Exit"
  option = gets.chomp.strip.to_i
  case option
  when 1
    cm.add_contact
  when 2
    cm.list_contacts
  when 3
    cm.delete_contact
  when 4
    cm.search_contact
  when 5
    cm.edit_contact
  when 0
    exit
  else
    puts "Select a valid option"
  end
end                                                                 
